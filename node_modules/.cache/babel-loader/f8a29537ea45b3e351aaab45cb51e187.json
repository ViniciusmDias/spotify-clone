{"ast":null,"code":"import _objectSpread from\"/home/vinicius/projects/react-17/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from'react';import{useParams}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{getCategoryPlaylistFailed,getCategoryPlaylistRequest,getCategoryPlaylistSuccess,logout}from'../actions';import{Playlists}from'../containers';import{endpoints}from'../modules/endpoints';import{getContentNameById}from'../modules/helpers';import{request,sanitizeUrl}from'../modules/request';var getCategoryPlaylists=endpoints.getCategoryPlaylists;var PlaylistsRoute=function PlaylistsRoute(_ref){var path=_ref.path;var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth,content=_useSelector.content;var dispatch=useDispatch();var _useParams=useParams(),categoryId=_useParams.categoryId;useEffect(function(){var requestOptions=_objectSpread(_objectSpread({},getCategoryPlaylists.options),{},{headers:{'Authorization':\"Bearer \".concat(auth.accessToken)}});dispatch(getCategoryPlaylistRequest());request(sanitizeUrl(getCategoryPlaylists.url,{categoryId:categoryId}),requestOptions).then(function(data){return dispatch(getCategoryPlaylistSuccess(data));}).catch(function(error){if(error===401){dispatch(logout());return;}dispatch(getCategoryPlaylistFailed(error));});},[auth,categoryId,dispatch]);return/*#__PURE__*/React.createElement(Playlists,{categoryId:categoryId,categoryName:getContentNameById(categoryId,content.categories),data:content.playlists,isLoading:content.status==='running'&&content.playlists.length===0,path:path});};export default PlaylistsRoute;","map":{"version":3,"sources":["/home/vinicius/projects/react-17/src/routes/PlaylistsRoute.jsx"],"names":["React","useEffect","useParams","useDispatch","useSelector","getCategoryPlaylistFailed","getCategoryPlaylistRequest","getCategoryPlaylistSuccess","logout","Playlists","endpoints","getContentNameById","request","sanitizeUrl","getCategoryPlaylists","PlaylistsRoute","path","state","auth","content","dispatch","categoryId","requestOptions","options","headers","accessToken","url","then","data","catch","error","categories","playlists","status","length"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OACEC,yBADF,CAEEC,0BAFF,CAGEC,0BAHF,CAIEC,MAJF,KAKO,YALP,CAOA,OAASC,SAAT,KAA0B,eAA1B,CAEA,OAASC,SAAT,KAA0B,sBAA1B,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,oBAArC,C,GAEQC,CAAAA,oB,CAAyBJ,S,CAAzBI,oB,CAER,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,kBACTZ,WAAW,CAAC,SAAAa,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CADF,CAC3BC,IAD2B,cAC3BA,IAD2B,CACrBC,OADqB,cACrBA,OADqB,CAEnC,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAFmC,eAGZD,SAAS,EAHG,CAG3BmB,UAH2B,YAG3BA,UAH2B,CAKnCpB,SAAS,CAAC,UAAM,CACd,GAAMqB,CAAAA,cAAc,gCACfR,oBAAoB,CAACS,OADN,MAElBC,OAAO,CAAE,CAAE,iCAA2BN,IAAI,CAACO,WAAhC,CAAF,CAFS,EAApB,CAKAL,QAAQ,CAACd,0BAA0B,EAA3B,CAAR,CAEAM,OAAO,CAACC,WAAW,CAACC,oBAAoB,CAACY,GAAtB,CAA0B,CAAEL,UAAU,CAAVA,UAAF,CAA1B,CAAZ,CAAuDC,cAAvD,CAAP,CACGK,IADH,CACQ,SAAAC,IAAI,QAAIR,CAAAA,QAAQ,CAACb,0BAA0B,CAACqB,IAAD,CAA3B,CAAZ,EADZ,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CACd,GAAIA,KAAK,GAAK,GAAd,CAAmB,CACjBV,QAAQ,CAACZ,MAAM,EAAP,CAAR,CAEA,OACD,CAEDY,QAAQ,CAACf,yBAAyB,CAACyB,KAAD,CAA1B,CAAR,CACD,CAVH,EAWD,CAnBQ,CAmBN,CAACZ,IAAD,CAAOG,UAAP,CAAmBD,QAAnB,CAnBM,CAAT,CAqBA,mBACE,oBAAC,SAAD,EACE,UAAU,CAAEC,UADd,CAEE,YAAY,CAAEV,kBAAkB,CAACU,UAAD,CAAaF,OAAO,CAACY,UAArB,CAFlC,CAGE,IAAI,CAAEZ,OAAO,CAACa,SAHhB,CAIE,SAAS,CAAEb,OAAO,CAACc,MAAR,GAAmB,SAAnB,EAAgCd,OAAO,CAACa,SAAR,CAAkBE,MAAlB,GAA6B,CAJ1E,CAKE,IAAI,CAAElB,IALR,EADF,CASD,CAnCD,CAqCA,cAAeD,CAAAA,cAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getCategoryPlaylistFailed,\n  getCategoryPlaylistRequest,\n  getCategoryPlaylistSuccess,\n  logout,\n} from '../actions';\n\nimport { Playlists } from '../containers';\n\nimport { endpoints } from '../modules/endpoints';\nimport { getContentNameById } from '../modules/helpers';\nimport { request, sanitizeUrl } from '../modules/request';\n\nconst { getCategoryPlaylists } = endpoints;\n\nconst PlaylistsRoute = ({ path }) => {\n  const { auth, content } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const { categoryId } = useParams();\n\n  useEffect(() => {\n    const requestOptions = {\n      ...getCategoryPlaylists.options,\n      headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n    }\n\n    dispatch(getCategoryPlaylistRequest());\n\n    request(sanitizeUrl(getCategoryPlaylists.url,{ categoryId }), requestOptions)\n      .then(data => dispatch(getCategoryPlaylistSuccess(data)))\n      .catch(error => {\n        if (error === 401) {\n          dispatch(logout());\n\n          return;\n        }\n\n        dispatch(getCategoryPlaylistFailed(error));\n      });\n  }, [auth, categoryId, dispatch]);\n\n  return (\n    <Playlists\n      categoryId={categoryId}\n      categoryName={getContentNameById(categoryId, content.categories)}\n      data={content.playlists}\n      isLoading={content.status === 'running' && content.playlists.length === 0}\n      path={path}\n    />\n  );\n}\n\nexport default PlaylistsRoute;"]},"metadata":{},"sourceType":"module"}