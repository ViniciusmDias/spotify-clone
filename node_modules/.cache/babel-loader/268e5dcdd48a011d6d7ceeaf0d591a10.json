{"ast":null,"code":"import{createStore}from'redux';import{persistStore,persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import UserConstants from'../constants/user';import appReducers from'../reducers';var rootReducer=function rootReducer(state,action){if(action.type===UserConstants.USER_LOGOUT){state=undefined;}return appReducers(state,action);};var persistConfig={key:'spotifyStorage',storage:storage,blacklist:['auth','content']};var persistedReducer=persistReducer(persistConfig,rootReducer);var store=createStore(persistedReducer,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__());var persistor=persistStore(store);export{store,persistor};","map":{"version":3,"sources":["/home/vinicius/projects/react-17/src/store/index.js"],"names":["createStore","persistStore","persistReducer","storage","UserConstants","appReducers","rootReducer","state","action","type","USER_LOGOUT","undefined","persistConfig","key","blacklist","persistedReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","persistor"],"mappings":"AAAA,OAASA,WAAT,KAA4B,OAA5B,CACA,OAASC,YAAT,CAAuBC,cAAvB,KAA6C,eAA7C,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CAEA,MAAOC,CAAAA,aAAP,KAA0B,mBAA1B,CAEA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC,GAAIA,MAAM,CAACC,IAAP,GAAgBL,aAAa,CAACM,WAAlC,CAA+C,CAC7CH,KAAK,CAAGI,SAAR,CACD,CAED,MAAON,CAAAA,WAAW,CAACE,KAAD,CAAQC,MAAR,CAAlB,CACD,CAND,CAQA,GAAMI,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,gBADe,CAEpBV,OAAO,CAAPA,OAFoB,CAGpBW,SAAS,CAAE,CAAC,MAAD,CAAS,SAAT,CAHS,CAAtB,CAMA,GAAMC,CAAAA,gBAAgB,CAAGb,cAAc,CAACU,aAAD,CAAgBN,WAAhB,CAAvC,CAEA,GAAMU,CAAAA,KAAK,CAAGhB,WAAW,CACvBe,gBADuB,CAEvBE,MAAM,CAACC,4BAAP,EAAuCD,MAAM,CAACC,4BAAP,EAFhB,CAAzB,CAKA,GAAMC,CAAAA,SAAS,CAAGlB,YAAY,CAACe,KAAD,CAA9B,CAEA,OAASA,KAAT,CAAgBG,SAAhB","sourcesContent":["import { createStore } from 'redux'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport UserConstants from '../constants/user';\n\nimport appReducers from '../reducers';\n\nconst rootReducer = (state, action) => {\n  if (action.type === UserConstants.USER_LOGOUT) {\n    state = undefined\n  }\n\n  return appReducers(state, action)\n}\n\nconst persistConfig = {\n  key: 'spotifyStorage',\n  storage,\n  blacklist: ['auth', 'content'],\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst persistor = persistStore(store)\n\nexport { store, persistor };"]},"metadata":{},"sourceType":"module"}