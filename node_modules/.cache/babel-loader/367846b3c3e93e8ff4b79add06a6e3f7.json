{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/projects/react-17/src/routes/AuthorizeRoute.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authCallbackError, authCallbackSucess } from '../actions';\nimport { getInfoFromUrlHash } from '../modules/url';\nimport { Authorize } from '../containers';\n\nconst AuthorizeRoute = () => {\n  const [redirect, setRedirect] = useState(false);\n  const isLogged = useSelector(state => state.auth.isLogged);\n  const dispatch = useDispatch();\n  const urlHash = window.location.hash;\n  useEffect(() => {\n    const hashData = getInfoFromUrlHash(urlHash);\n\n    if (hashData.error) {\n      dispatch(authCallbackError(hashData.error));\n      return;\n    }\n\n    dispatch(authCallbackSucess(hashData));\n  }, [dispatch, urlHash]);\n  useEffect(() => {\n    if (isLogged) {\n      setTimeout(() => setRedirect(true), 3000);\n    }\n  }, [isLogged]);\n\n  if (redirect) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/dashboard'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Authorize, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  });\n};\n\nexport default AuthorizeRoute;","map":{"version":3,"sources":["/home/vinicius/projects/react-17/src/routes/AuthorizeRoute.jsx"],"names":["React","useEffect","useState","Redirect","useDispatch","useSelector","authCallbackError","authCallbackSucess","getInfoFromUrlHash","Authorize","AuthorizeRoute","redirect","setRedirect","isLogged","state","auth","dispatch","urlHash","window","location","hash","hashData","error","setTimeout","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,YAAtD;AAEA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMW,QAAQ,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,QAArB,CAA5B;AACA,QAAMG,QAAQ,GAAGZ,WAAW,EAA5B;AAEA,QAAMa,OAAO,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,QAAQ,GAAGb,kBAAkB,CAACS,OAAD,CAAnC;;AAEA,QAAII,QAAQ,CAACC,KAAb,EAAoB;AAClBN,MAAAA,QAAQ,CAACV,iBAAiB,CAACe,QAAQ,CAACC,KAAV,CAAlB,CAAR;AAEA;AACD;;AAEDN,IAAAA,QAAQ,CAACT,kBAAkB,CAACc,QAAD,CAAnB,CAAR;AACD,GAVQ,EAUN,CAACL,QAAD,EAAWC,OAAX,CAVM,CAAT;AAYAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAJ,EAAc;AACZU,MAAAA,UAAU,CACR,MAAMX,WAAW,CAAC,IAAD,CADT,EAER,IAFQ,CAAV;AAGD;AACF,GANQ,EAMN,CAACC,QAAD,CANM,CAAT;;AAQA,MAAIF,QAAJ,EAAc;AACZ,wBAAQ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEa,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD;;AAED,sBAAQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACD,CAhCD;;AAkCA,eAAed,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { authCallbackError, authCallbackSucess } from '../actions';\n\nimport { getInfoFromUrlHash } from '../modules/url';\n\nimport { Authorize } from '../containers';\n\nconst AuthorizeRoute = () => {\n  const [redirect, setRedirect] = useState(false);\n  const isLogged = useSelector(state => state.auth.isLogged);\n  const dispatch = useDispatch();\n\n  const urlHash = window.location.hash;\n\n  useEffect(() => {\n    const hashData = getInfoFromUrlHash(urlHash);\n\n    if (hashData.error) {\n      dispatch(authCallbackError(hashData.error));\n\n      return;\n    }\n\n    dispatch(authCallbackSucess(hashData));\n  }, [dispatch, urlHash]);\n\n  useEffect(() => {\n    if (isLogged) {\n      setTimeout(\n        () => setRedirect(true),\n        3000);\n    }\n  }, [isLogged]);\n\n  if (redirect) {\n    return (<Redirect to={{ pathname: '/dashboard' }} />);\n  }\n\n  return (<Authorize />);\n}\n\nexport default AuthorizeRoute;\n\n"]},"metadata":{},"sourceType":"module"}