{"ast":null,"code":"import _slicedToArray from\"/home/vinicius/projects/react-17/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Redirect}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{authCallbackError,authCallbackSucess}from'../actions';import{getInfoFromUrlHash}from'../modules/url';import{Authorize}from'../containers';var AuthorizeRoute=function AuthorizeRoute(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),redirect=_useState2[0],setRedirect=_useState2[1];var isLogged=useSelector(function(state){return state.auth.isLogged;});var dispatch=useDispatch();var urlHash=window.location.hash;useEffect(function(){var hashData=getInfoFromUrlHash(urlHash);if(hashData.error){dispatch(authCallbackError(hashData.error));return;}dispatch(authCallbackSucess(hashData));},[dispatch,urlHash]);useEffect(function(){if(isLogged){setTimeout(function(){return setRedirect(true);},3000);}},[isLogged]);if(redirect){return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/dashboard'}});}return/*#__PURE__*/React.createElement(Authorize,null);};export default AuthorizeRoute;","map":{"version":3,"sources":["/home/vinicius/projects/react-17/src/routes/AuthorizeRoute.jsx"],"names":["React","useEffect","useState","Redirect","useDispatch","useSelector","authCallbackError","authCallbackSucess","getInfoFromUrlHash","Authorize","AuthorizeRoute","redirect","setRedirect","isLogged","state","auth","dispatch","urlHash","window","location","hash","hashData","error","setTimeout","pathname"],"mappings":"uJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,iBAAT,CAA4BC,kBAA5B,KAAsD,YAAtD,CAEA,OAASC,kBAAT,KAAmC,gBAAnC,CAEA,OAASC,SAAT,KAA0B,eAA1B,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACKR,QAAQ,CAAC,KAAD,CADb,wCACpBS,QADoB,eACVC,WADU,eAE3B,GAAMC,CAAAA,QAAQ,CAAGR,WAAW,CAAC,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,CAAWF,QAAf,EAAN,CAA5B,CACA,GAAMG,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA,GAAMa,CAAAA,OAAO,CAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhC,CAEAnB,SAAS,CAAC,UAAM,CACd,GAAMoB,CAAAA,QAAQ,CAAGb,kBAAkB,CAACS,OAAD,CAAnC,CAEA,GAAII,QAAQ,CAACC,KAAb,CAAoB,CAClBN,QAAQ,CAACV,iBAAiB,CAACe,QAAQ,CAACC,KAAV,CAAlB,CAAR,CAEA,OACD,CAEDN,QAAQ,CAACT,kBAAkB,CAACc,QAAD,CAAnB,CAAR,CACD,CAVQ,CAUN,CAACL,QAAD,CAAWC,OAAX,CAVM,CAAT,CAYAhB,SAAS,CAAC,UAAM,CACd,GAAIY,QAAJ,CAAc,CACZU,UAAU,CACR,iBAAMX,CAAAA,WAAW,CAAC,IAAD,CAAjB,EADQ,CAER,IAFQ,CAAV,CAGD,CACF,CANQ,CAMN,CAACC,QAAD,CANM,CAAT,CAQA,GAAIF,QAAJ,CAAc,CACZ,mBAAQ,oBAAC,QAAD,EAAU,EAAE,CAAE,CAAEa,QAAQ,CAAE,YAAZ,CAAd,EAAR,CACD,CAED,mBAAQ,oBAAC,SAAD,MAAR,CACD,CAhCD,CAkCA,cAAed,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { authCallbackError, authCallbackSucess } from '../actions';\n\nimport { getInfoFromUrlHash } from '../modules/url';\n\nimport { Authorize } from '../containers';\n\nconst AuthorizeRoute = () => {\n  const [redirect, setRedirect] = useState(false);\n  const isLogged = useSelector(state => state.auth.isLogged);\n  const dispatch = useDispatch();\n\n  const urlHash = window.location.hash;\n\n  useEffect(() => {\n    const hashData = getInfoFromUrlHash(urlHash);\n\n    if (hashData.error) {\n      dispatch(authCallbackError(hashData.error));\n\n      return;\n    }\n\n    dispatch(authCallbackSucess(hashData));\n  }, [dispatch, urlHash]);\n\n  useEffect(() => {\n    if (isLogged) {\n      setTimeout(\n        () => setRedirect(true),\n        3000);\n    }\n  }, [isLogged]);\n\n  if (redirect) {\n    return (<Redirect to={{ pathname: '/dashboard' }} />);\n  }\n\n  return (<Authorize />);\n}\n\nexport default AuthorizeRoute;\n\n"]},"metadata":{},"sourceType":"module"}