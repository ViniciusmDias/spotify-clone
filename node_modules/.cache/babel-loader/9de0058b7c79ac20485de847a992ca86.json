{"ast":null,"code":"import _objectSpread from\"/home/vinicius/projects/react-17/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from'react';import{useParams}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{getPlaylistTracksRequest,getPlaylistTracksSuccess,getPlaylistTracksFailed,logout}from'../actions';import{endpoints}from'../modules/endpoints';import{getContentNameById}from'../modules/helpers';import{request,sanitizeUrl}from'../modules/request';import{Tracks}from'../containers';var getPlaylistTracks=endpoints.getPlaylistTracks;var TracksRoute=function TracksRoute(_ref){var path=_ref.path;var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth,content=_useSelector.content;var dispatch=useDispatch();var _useParams=useParams(),playlistId=_useParams.playlistId;useEffect(function(){var requestOptions=_objectSpread(_objectSpread({},getPlaylistTracks.options),{},{headers:{'Authorization':\"Bearer \".concat(auth.accessToken)}});dispatch(getPlaylistTracksRequest());request(sanitizeUrl(getPlaylistTracks.url,{playlistId:playlistId}),requestOptions).then(function(data){return dispatch(getPlaylistTracksSuccess(data));}).catch(function(error){if(error===401){dispatch(logout());return;}dispatch(getPlaylistTracksFailed(error));});},[auth,playlistId,dispatch]);return/*#__PURE__*/React.createElement(Tracks,{categoryName:getContentNameById(playlistId,content.playlists),data:content.tracks,isLoading:content.status==='running',path:path});};export default TracksRoute;","map":{"version":3,"sources":["/home/vinicius/projects/react-17/src/routes/TracksRoute.jsx"],"names":["React","useEffect","useParams","useDispatch","useSelector","getPlaylistTracksRequest","getPlaylistTracksSuccess","getPlaylistTracksFailed","logout","endpoints","getContentNameById","request","sanitizeUrl","Tracks","getPlaylistTracks","TracksRoute","path","state","auth","content","dispatch","playlistId","requestOptions","options","headers","accessToken","url","then","data","catch","error","playlists","tracks","status"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OACEC,wBADF,CAEEC,wBAFF,CAGEC,uBAHF,CAIEC,MAJF,KAKO,YALP,CAOA,OAASC,SAAT,KAA0B,sBAA1B,CACA,OAASC,kBAAT,KAAmC,oBAAnC,CACA,OAASC,OAAT,CAAkBC,WAAlB,KAAqC,oBAArC,CAEA,OAASC,MAAT,KAAuB,eAAvB,C,GAEQC,CAAAA,iB,CAAsBL,S,CAAtBK,iB,CAER,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,kBACNZ,WAAW,CAAC,SAAAa,KAAK,QAAIA,CAAAA,KAAJ,EAAN,CADL,CACxBC,IADwB,cACxBA,IADwB,CAClBC,OADkB,cAClBA,OADkB,CAEhC,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAFgC,eAGTD,SAAS,EAHA,CAGxBmB,UAHwB,YAGxBA,UAHwB,CAKhCpB,SAAS,CAAC,UAAM,CACd,GAAMqB,CAAAA,cAAc,gCACfR,iBAAiB,CAACS,OADH,MAElBC,OAAO,CAAE,CAAE,iCAA2BN,IAAI,CAACO,WAAhC,CAAF,CAFS,EAApB,CAKAL,QAAQ,CAACf,wBAAwB,EAAzB,CAAR,CAEAM,OAAO,CAACC,WAAW,CAACE,iBAAiB,CAACY,GAAnB,CAAuB,CAAEL,UAAU,CAAVA,UAAF,CAAvB,CAAZ,CAAoDC,cAApD,CAAP,CACGK,IADH,CACQ,SAAAC,IAAI,QAAIR,CAAAA,QAAQ,CAACd,wBAAwB,CAACsB,IAAD,CAAzB,CAAZ,EADZ,EAEGC,KAFH,CAES,SAAAC,KAAK,CAAI,CACd,GAAIA,KAAK,GAAK,GAAd,CAAmB,CACjBV,QAAQ,CAACZ,MAAM,EAAP,CAAR,CAEA,OACD,CAEDY,QAAQ,CAACb,uBAAuB,CAACuB,KAAD,CAAxB,CAAR,CACD,CAVH,EAYD,CApBQ,CAoBN,CAACZ,IAAD,CAAOG,UAAP,CAAmBD,QAAnB,CApBM,CAAT,CAsBA,mBACE,oBAAC,MAAD,EACE,YAAY,CAAEV,kBAAkB,CAACW,UAAD,CAAaF,OAAO,CAACY,SAArB,CADlC,CAEE,IAAI,CAAEZ,OAAO,CAACa,MAFhB,CAGE,SAAS,CAAEb,OAAO,CAACc,MAAR,GAAmB,SAHhC,CAIE,IAAI,CAAEjB,IAJR,EADF,CAQD,CAnCD,CAqCA,cAAeD,CAAAA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  getPlaylistTracksRequest,\n  getPlaylistTracksSuccess,\n  getPlaylistTracksFailed,\n  logout,\n} from '../actions';\n\nimport { endpoints } from '../modules/endpoints';\nimport { getContentNameById } from '../modules/helpers';\nimport { request, sanitizeUrl } from '../modules/request';\n\nimport { Tracks } from '../containers';\n\nconst { getPlaylistTracks } = endpoints;\n\nconst TracksRoute = ({ path }) => {\n  const { auth, content } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const { playlistId } = useParams();\n\n  useEffect(() => {\n    const requestOptions = {\n      ...getPlaylistTracks.options,\n      headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n    }\n\n    dispatch(getPlaylistTracksRequest());\n\n    request(sanitizeUrl(getPlaylistTracks.url,{ playlistId }), requestOptions)\n      .then(data => dispatch(getPlaylistTracksSuccess(data)))\n      .catch(error => {\n        if (error === 401) {\n          dispatch(logout());\n\n          return;\n        }\n\n        dispatch(getPlaylistTracksFailed(error));\n      });\n\n  }, [auth, playlistId, dispatch]);\n\n  return (\n    <Tracks\n      categoryName={getContentNameById(playlistId, content.playlists)}\n      data={content.tracks}\n      isLoading={content.status === 'running'}\n      path={path}\n    />\n  );\n}\n\nexport default TracksRoute;"]},"metadata":{},"sourceType":"module"}