{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/projects/react-17/src/routes/DashboardRoute.jsx\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, useRouteMatch } from 'react-router-dom';\nimport { getCategoriesFailed, getCategoriesRequest, getCategoriesSuccess, getUserFailed, getUserRequest, getUserSuccess, logout } from '../actions';\nimport { endpoints } from '../modules/endpoints';\nimport { request } from '../modules/request';\nimport { WelcomeBox } from '../components';\nimport { Categories, Dashboard, PrivateRoute, Topbar } from '../containers';\nimport PlaylistsRoute from './PlaylistsRoute';\nimport TracksRoute from './TracksRoute';\nconst {\n  getCategories,\n  getUserProfile\n} = endpoints;\n\nconst DashboardRoute = () => {\n  const {\n    auth,\n    content,\n    user\n  } = useSelector(state => state);\n  const {\n    path,\n    url\n  } = useRouteMatch();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const requestOptions = { ...getUserProfile.options,\n      headers: {\n        'Authorization': `Bearer ${auth.accessToken}`\n      }\n    };\n    dispatch(getUserRequest());\n    request(getUserProfile.url, requestOptions).then(data => dispatch(getUserSuccess(data))).catch(error => {\n      if (error === 401) {\n        dispatch(logout());\n        return;\n      }\n\n      dispatch(getUserFailed(error));\n    });\n  }, [auth, dispatch]);\n  useEffect(() => {\n    const requestOptions = { ...getCategories.options,\n      headers: {\n        'Authorization': `Bearer ${auth.accessToken}`\n      }\n    };\n    dispatch(getCategoriesRequest());\n    request(getCategories.url, requestOptions).then(data => dispatch(getCategoriesSuccess(data))).catch(error => {\n      if (error === 401) {\n        dispatch(logout());\n        return;\n      }\n\n      dispatch(getCategoriesFailed(error));\n    });\n  }, [auth, dispatch]);\n  return /*#__PURE__*/React.createElement(Dashboard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Topbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WelcomeBox, {\n    name: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Categories, {\n    isLoading: content.status === 'running' && content.categories.length === 0,\n    data: content.categories,\n    url: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: `${path}/:categoryId`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PlaylistsRoute, {\n    path: path,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(PrivateRoute, {\n    exact: true,\n    path: `${path}/:categoryId/:playlistId`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TracksRoute, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default DashboardRoute;","map":{"version":3,"sources":["/home/vinicius/projects/react-17/src/routes/DashboardRoute.jsx"],"names":["React","useEffect","useDispatch","useSelector","Switch","useRouteMatch","getCategoriesFailed","getCategoriesRequest","getCategoriesSuccess","getUserFailed","getUserRequest","getUserSuccess","logout","endpoints","request","WelcomeBox","Categories","Dashboard","PrivateRoute","Topbar","PlaylistsRoute","TracksRoute","getCategories","getUserProfile","DashboardRoute","auth","content","user","state","path","url","dispatch","requestOptions","options","headers","accessToken","then","data","catch","error","name","status","categories","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Switch,\n  useRouteMatch,\n} from 'react-router-dom';\n\nimport {\n  getCategoriesFailed,\n  getCategoriesRequest,\n  getCategoriesSuccess,\n  getUserFailed,\n  getUserRequest,\n  getUserSuccess,\n  logout,\n} from '../actions';\n\nimport { endpoints } from '../modules/endpoints';\nimport { request } from '../modules/request';\n\nimport { WelcomeBox } from '../components';\nimport {\n  Categories,\n  Dashboard,\n  PrivateRoute,\n  Topbar,\n} from '../containers';\n\nimport PlaylistsRoute from './PlaylistsRoute';\nimport TracksRoute from './TracksRoute';\n\nconst { getCategories, getUserProfile,  } = endpoints;\n\nconst DashboardRoute = () => {\n  const { auth, content, user } = useSelector(state => state);\n  const { path, url } = useRouteMatch();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const requestOptions = {\n      ...getUserProfile.options,\n      headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n    }\n\n    dispatch(getUserRequest());\n\n    request(getUserProfile.url, requestOptions)\n      .then(data => dispatch(getUserSuccess(data)))\n      .catch(error => {\n        if (error === 401) {\n          dispatch(logout());\n\n          return;\n        }\n\n        dispatch(getUserFailed(error));\n      });\n\n  }, [auth, dispatch]);\n\n  useEffect(() => {\n    const requestOptions = {\n      ...getCategories.options,\n      headers: { 'Authorization': `Bearer ${auth.accessToken}` }\n    }\n\n    dispatch(getCategoriesRequest());\n\n    request(getCategories.url, requestOptions)\n      .then(data => dispatch(getCategoriesSuccess(data)))\n      .catch(error => {\n        if (error === 401) {\n          dispatch(logout());\n\n          return;\n        }\n\n        dispatch(getCategoriesFailed(error))\n      });\n\n  }, [auth, dispatch]);\n\n  return (\n    <Dashboard>\n      <Topbar />\n\n      <Switch>\n        <PrivateRoute exact path={path}>\n          <WelcomeBox name={user.name} />\n\n          <Categories\n            isLoading={content.status === 'running' && content.categories.length === 0}\n            data={content.categories}\n            url={url}\n          />\n        </PrivateRoute>\n\n        <PrivateRoute exact path={`${path}/:categoryId`}>\n          <PlaylistsRoute path={path} />\n        </PrivateRoute>\n\n        <PrivateRoute exact path={`${path}/:categoryId/:playlistId`}>\n          <TracksRoute />\n        </PrivateRoute>\n      </Switch>\n    </Dashboard>\n  );\n}\n\nexport default DashboardRoute;"]},"metadata":{},"sourceType":"module"}