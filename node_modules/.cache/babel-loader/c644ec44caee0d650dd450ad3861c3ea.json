{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/projects/react-17/src/containers/Player/Player.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BsPauseFill, BsPlayFill } from 'react-icons/bs';\nimport Ink from 'react-ink';\nimport { removeTrackToPlayer, setPlayerHeight } from '../../actions';\nimport { usePrevious } from '../../modules/custom-hook';\nimport './Player.scss';\n\nconst Player = () => {\n  var _playerRef$current, _currentTrack$album, _currentTrack$album$i;\n\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const playingNowId = useSelector(state => state.content.playingNowId);\n  const playingNowTrack = useSelector(state => state.content.playingNowTrack);\n  const dispatch = useDispatch();\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [progressBarWidth, setProgressBarWidth] = useState('0%');\n  const prevPlayingNowId = usePrevious(playingNowId);\n  const audioElementRef = useRef(null);\n  const playerRef = useRef(null);\n  const playerHeight = (playerRef === null || playerRef === void 0 ? void 0 : (_playerRef$current = playerRef.current) === null || _playerRef$current === void 0 ? void 0 : _playerRef$current.offsetHeight) || 0;\n\n  const togglePlayPause = () => {\n    const audioPlayer = audioElementRef.current;\n\n    if (isPlaying && !audioPlayer.paused) {\n      setIsPlaying(false);\n    } else if (!isPlaying && audioPlayer.paused) {\n      setIsPlaying(true);\n    }\n  };\n\n  const handleTimeUpdate = () => {\n    const audioPlayer = audioElementRef.current;\n    const width = Math.floor(audioPlayer.currentTime / audioPlayer.duration * 100) + '%';\n    setProgressBarWidth(width);\n  };\n\n  const handleOnEnded = () => {\n    dispatch(removeTrackToPlayer());\n  };\n\n  useEffect(() => {\n    if (playingNowId === prevPlayingNowId) {\n      return;\n    }\n\n    setCurrentTrack(playingNowTrack);\n  }, [playingNowId, prevPlayingNowId, playingNowTrack]);\n  useEffect(() => {\n    const audioPlayer = audioElementRef.current;\n\n    if (prevPlayingNowId === playingNowId) {\n      if (isPlaying && (audioPlayer === null || audioPlayer === void 0 ? void 0 : audioPlayer.paused)) {\n        audioPlayer.play();\n      }\n\n      if (!isPlaying && !(audioPlayer === null || audioPlayer === void 0 ? void 0 : audioPlayer.paused)) {\n        audioPlayer.pause();\n      }\n    } else {\n      setIsPlaying(true);\n    }\n  }, [isPlaying, playingNowId, prevPlayingNowId]);\n  useEffect(() => {\n    if (playerHeight > 0) {\n      dispatch(setPlayerHeight(playerHeight));\n    }\n  }, [isPlaying, dispatch, playerHeight]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: playerRef,\n    className: `player ${currentTrack ? 'is-playing' : ''}`,\n    \"data-testid\": \"player\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, currentTrack && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__progress-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__progress-bar__stroke\",\n    style: {\n      width: `${progressBarWidth}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: \"player__album-cover\",\n    style: {\n      backgroundImage: `url(${((_currentTrack$album = currentTrack.album) === null || _currentTrack$album === void 0 ? void 0 : (_currentTrack$album$i = _currentTrack$album.images[1]) === null || _currentTrack$album$i === void 0 ? void 0 : _currentTrack$album$i.url) || ''})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player__music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, currentTrack.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"player__artists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, currentTrack.artists && currentTrack.artists.map(({\n    name\n  }) => name).join(', ')), /*#__PURE__*/React.createElement(\"div\", {\n    className: `player__status__current ${isPlaying ? 'is-playing' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, \"Pausado\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, \"Reproduzindo\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player__controls\",\n    onClick: togglePlayPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `player__control ${!isPlaying ? 'is-paused' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, !isPlaying ? /*#__PURE__*/React.createElement(BsPlayFill, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 22\n    }\n  }) : /*#__PURE__*/React.createElement(BsPauseFill, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Ink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"audio\", {\n    ref: audioElementRef,\n    autoPlay: true,\n    onEnded: handleOnEnded,\n    onTimeUpdate: handleTimeUpdate,\n    preload: \"metadata\",\n    src: currentTrack.preview_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default Player;","map":{"version":3,"sources":["/home/vinicius/projects/react-17/src/containers/Player/Player.jsx"],"names":["React","useEffect","useRef","useState","useDispatch","useSelector","BsPauseFill","BsPlayFill","Ink","removeTrackToPlayer","setPlayerHeight","usePrevious","Player","currentTrack","setCurrentTrack","playingNowId","state","content","playingNowTrack","dispatch","isPlaying","setIsPlaying","progressBarWidth","setProgressBarWidth","prevPlayingNowId","audioElementRef","playerRef","playerHeight","current","offsetHeight","togglePlayPause","audioPlayer","paused","handleTimeUpdate","width","Math","floor","currentTime","duration","handleOnEnded","play","pause","backgroundImage","album","images","url","name","artists","map","join","preview_url"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BsPauseFill,\n  BsPlayFill,\n} from 'react-icons/bs';\nimport Ink from 'react-ink';\n\nimport { removeTrackToPlayer, setPlayerHeight } from '../../actions';\nimport { usePrevious } from '../../modules/custom-hook';\n\nimport './Player.scss';\n\nconst Player = () => {\n  const [currentTrack, setCurrentTrack] = useState(null);\n  const playingNowId = useSelector(state => state.content.playingNowId);\n  const playingNowTrack = useSelector(state => state.content.playingNowTrack);\n  const dispatch = useDispatch();\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [progressBarWidth, setProgressBarWidth] = useState('0%');\n  const prevPlayingNowId = usePrevious(playingNowId);\n  const audioElementRef = useRef(null);\n  const playerRef = useRef(null);\n  const playerHeight = playerRef?.current?.offsetHeight || 0;\n\n  const togglePlayPause = () => {\n    const audioPlayer = audioElementRef.current;\n\n    if (isPlaying && !audioPlayer.paused) {\n      setIsPlaying(false);\n    }\n    else if (!isPlaying && audioPlayer.paused) {\n      setIsPlaying(true);\n    }\n  }\n\n  const handleTimeUpdate = () => {\n    const audioPlayer = audioElementRef.current;\n    const width = Math.floor((audioPlayer.currentTime / audioPlayer.duration) * 100) + '%';\n\n    setProgressBarWidth(width);\n  }\n\n  const handleOnEnded = () => {\n    dispatch(removeTrackToPlayer());\n  }\n\n  useEffect(() => {\n    if (playingNowId === prevPlayingNowId) {\n      return;\n    }\n\n    setCurrentTrack(playingNowTrack);\n  }, [playingNowId, prevPlayingNowId, playingNowTrack]);\n\n  useEffect(() => {\n    const audioPlayer = audioElementRef.current;\n\n    if (prevPlayingNowId === playingNowId) {\n      if (isPlaying && audioPlayer?.paused) {\n        audioPlayer.play();\n      }\n\n      if (!isPlaying && !audioPlayer?.paused) {\n        audioPlayer.pause();\n      }\n    }\n    else {\n      setIsPlaying(true);\n    }\n  }, [isPlaying, playingNowId, prevPlayingNowId]);\n\n  useEffect(() => {\n    if (playerHeight > 0) {\n      dispatch(setPlayerHeight(playerHeight))\n    }\n  }, [isPlaying, dispatch, playerHeight])\n\n  return (\n    <div\n      ref={playerRef}\n      className={`player ${currentTrack ? 'is-playing' : ''}`}\n      data-testid=\"player\"\n    >\n      {currentTrack && (\n        <div className=\"player__wrapper\">\n          <div className=\"player__progress-bar\">\n            <div\n              className=\"player__progress-bar__stroke\"\n              style={{width: `${progressBarWidth}`}}\n            />\n          </div>\n\n          <div className=\"container\">\n            <figure\n              className=\"player__album-cover\"\n              style={{ backgroundImage: `url(${currentTrack.album?.images[1]?.url || ''})` }}\n            />\n\n            <div className=\"player__status\">\n              <div className=\"player__artist\">\n                <span className=\"player__music\">\n                  {currentTrack.name}\n                </span>\n\n                <span className=\"player__artists\">\n                  {currentTrack.artists && currentTrack.artists.map(({ name }) => name).join(', ')}\n                </span>\n\n                <div className={`player__status__current ${isPlaying ? 'is-playing' : ''}`}>\n                  <span>Pausado</span>\n                  <span>Reproduzindo</span>\n                </div>\n              </div>\n            </div>\n\n            <div\n              className=\"player__controls\"\n              onClick={togglePlayPause}\n            >\n              <div className={`player__control ${!isPlaying ? 'is-paused' : ''}`}>\n                {!isPlaying\n                  ? (<BsPlayFill />)\n                  : (<BsPauseFill />)\n                }\n                <Ink />\n              </div>\n            </div>\n          </div>\n\n          <audio\n            ref={audioElementRef}\n            autoPlay\n            onEnded={handleOnEnded}\n            onTimeUpdate={handleTimeUpdate}\n            preload=\"metadata\"\n            src={currentTrack.preview_url}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Player;"]},"metadata":{},"sourceType":"module"}